/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module Fulladder (
  input A,
  input B,
  input Ci,
  output Co,
  output S
);
  assign S = ((A ^ B) ^ Ci);
  assign Co = ((A & B) | ((A | B) & Ci));
endmodule

module Sumador_4bits (
  input A1,
  input B1,
  input Ci,
  input A2,
  input B2,
  input A3,
  input B3,
  input A4,
  input B4,
  output S1,
  output S2,
  output S3,
  output S4,
  output Co
);
  wire s0;
  wire s5;
  wire s6;
  Fulladder Fulladder_i0 (
    .A( A1 ),
    .B( B1 ),
    .Ci( Ci ),
    .Co( s0 ),
    .S( S1 )
  );
  Fulladder Fulladder_i1 (
    .A( A2 ),
    .B( B2 ),
    .Ci( s0 ),
    .Co( s5 ),
    .S( S2 )
  );
  Fulladder Fulladder_i2 (
    .A( A3 ),
    .B( B3 ),
    .Ci( s5 ),
    .Co( s6 ),
    .S( S3 )
  );
  Fulladder Fulladder_i3 (
    .A( A4 ),
    .B( B4 ),
    .Ci( s6 ),
    .Co( Co ),
    .S( S4 )
  );
endmodule
